extends CharacterBody3D
#Health
@export var health: float = 30.0
@export var max_health: float = 100.0
#Movement
@export var speed: float = 2.50
@export var sprint_speed: float = 4.75
@export var jump_velocity: float = 4.50
#SoundEffect
@onready var heartbeat: AudioStreamPlayer = $Heartbeat
@onready var footstep_walk = $Footstep_Walk
@onready var footstep_sprint= $Footstep_Sprint
#Crouching
var is_crouching = false
#‚≠êHeartbeat
var is_heartbeat = false

func _ready() -> void:
	# Lock and Hide Cursor
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	
func _process(_delta: float) -> void:
	#‚≠ê ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏ó‡∏∏‡∏Å‡πÄ‡∏ü‡∏£‡∏°
	update_heartbeat()
	
	if Input.is_action_just_pressed("Crouch"):
		is_crouching = !is_crouching
		print("is_crouch == true")
		
func handle_crouching(_delta: float) -> void:
	if is_crouching and $CollisionShape3D.shape.height > 0.2:
		var crouch_height = lerp($CollisionShape3D.shape.height, 0.2, 0.2) 
		$CollisionShape3D.shape.height = crouch_height
		
	if !is_crouching and $CollisionShape3D.shape.height < 2.0:
		var crouch_height = lerp($CollisionShape3D.shape.height, 2.0, 0.2)
		$CollisionShape3D.shape.height = crouch_height
	
func _physics_process(delta: float) -> void:
	#‡πÄ‡∏ä‡πá‡∏Ñ Pause ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£!
	if (Input.mouse_mode == Input.MOUSE_MODE_VISIBLE):
		return
	handle_crouching(delta)
	handle_movement(delta)
	handle_gravity(delta)
	move_and_slide()

func handle_movement(delta):
	var current_speed = speed
	
	var is_sprinting = Input.is_action_pressed("Sprint")
	if is_sprinting:
		current_speed = sprint_speed
		
	var input_dir := Input.get_vector("M_Left", "M_Right", "M_Forward", "M_Backward")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * current_speed
		velocity.z = direction.z * current_speed
	else:
		velocity.x = move_toward(velocity.x, 0, speed)
		velocity.z = move_toward(velocity.z, 0, speed)
		
	#Footstep Logic
	if direction and is_on_floor():
		if is_sprinting:
			if not footstep_sprint.playing:
				footstep_sprint.play()
			footstep_walk.stop()
		else:
			if not footstep_walk.playing:
				footstep_walk.play()
			footstep_sprint.stop()
	else:
		footstep_walk.stop()
		footstep_sprint.stop()

func handle_gravity(delta):
	if not is_on_floor():
		velocity += get_gravity() * delta
	if Input.is_action_just_pressed("Jump") and is_on_floor():
		velocity.y = jump_velocity
		
func update_heartbeat() -> void:
	if not heartbeat or not heartbeat.stream:
		return
		
	# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì % HP
	var health_percent = (health / max_health) * 100.0
	
	# ‚≠ê ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 1: HP ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 30% ‚Üí ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏ï‡πâ‡∏ô‡πÄ‡∏£‡πá‡∏ß
	if health_percent < 30.0:
		if not is_heartbeat:
			heartbeat.play()
			is_heartbeat = true
		# ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ HP ‡∏ï‡πà‡∏≥‡∏°‡∏≤‡∏Å
		heartbeat.pitch_scale = 1.5 if health_percent < 15.0 else 1.2
		heartbeat.volume_db = -10.0  # ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
		
	# ‚≠ê ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 2: HP ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 30-50% ‚Üí ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏ï‡πâ‡∏ô‡∏ä‡πâ‡∏≤
	elif health_percent < 50.0:
		if not is_heartbeat:
			heartbeat.play()
			is_heartbeat = true
		heartbeat.pitch_scale = 1.0
		heartbeat.volume_db = -15.0  # ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏•‡∏á
		
	# ‚≠ê ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 3: HP ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 50% ‚Üí ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á
	else:
		if is_heartbeat:
			heartbeat.stop()
			is_heartbeat = false
	
	# ‚≠ê ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏±‡∏Å‡∏©‡∏≤ (‡πÉ‡∏´‡∏°‡πà!)

#‚≠êHealsystem
func heal(amount: float) -> void:
	health += amount
	health = clamp(health, 0.0, max_health)
	print("üíö HP: ", health, "/", max_health)

#‚≠êDied
func player_died() -> void:
	print("üíÄ Player Died!")
	# ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à
	if heartbeat:
		heartbeat.stop()
	# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
